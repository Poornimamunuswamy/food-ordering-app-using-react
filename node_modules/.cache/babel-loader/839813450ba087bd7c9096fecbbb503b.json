{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food-ordering-app\\\\src\\\\components\\\\store\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useReducer } from 'react/cjs/react.production.min';\nimport Context from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  amount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.items.concat(action.item);\n    const updatedTotal = state.amount + action.item.price * action.item.amount;\n    return {\n      items: updatedItem,\n      amount: updatedTotal\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addItemsHandler = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemsHandler = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const context = {\n    items: cartState.items,\n    amount: cartState.a,\n    addItems: addItemsHandler,\n    removeItems: removeItemsHandler\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ContextProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["D:/React/Food-ordering-app/src/components/store/ContextProvider.js"],"names":["useContext","useReducer","Context","defaultCartState","items","amount","cartReducer","state","action","type","updatedItem","concat","item","updatedTotal","price","ContextProvider","props","cartState","dispatchCart","addItemsHandler","removeItemsHandler","id","context","a","addItems","removeItems","children"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,MAAM,EAAE;AAFe,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAe,KAAlB,EAAwB;AACpB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,YAAY,GAAGN,KAAK,CAACF,MAAN,GAAgBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYP,MAArE;AACA,WAAO;AACHD,MAAAA,KAAK,EAAEM,WADJ;AAEHL,MAAAA,MAAM,EAAEQ;AAFL,KAAP;AAIH;;AACH,SAAOV,gBAAP;AACD,CAVD;;AAYA,MAAMY,eAAe,GAAIC,KAAD,IAAS;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA5C;;AACA,QAAMgB,eAAe,GAAIP,IAAD,IAAU;AAC9BM,IAAAA,YAAY,CAAC;AAACT,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMQ,kBAAkB,GAAIC,EAAD,IAAQ;AAC/BH,IAAAA,YAAY,CAAC;AAAET,MAAAA,IAAI,EAAE,QAAR;AAAkBY,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMC,OAAO,GAAG;AACdlB,IAAAA,KAAK,EAAEa,SAAS,CAACb,KADH;AAEdC,IAAAA,MAAM,EAAEY,SAAS,CAACM,CAFJ;AAGdC,IAAAA,QAAQ,EAAEL,eAHI;AAIdM,IAAAA,WAAW,EAAEL;AAJC,GAAhB;AAOA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEE,OAAzB;AAAA,cACFN,KAAK,CAACU;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAlBD;;GAAMX,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import {useContext} from 'react';\r\nimport { useReducer } from 'react/cjs/react.production.min';\r\nimport Context from './context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  amount: 0,\r\n};\r\n\r\nconst cartReducer = (state,action)=>{\r\n    if(action.type ===\"ADD\"){\r\n        const updatedItem = state.items.concat(action.item);\r\n        const updatedTotal = state.amount + (action.item.price * action.item.amount);\r\n        return {\r\n            items: updatedItem,\r\n            amount: updatedTotal\r\n        }\r\n    }\r\n  return defaultCartState;\r\n}\r\n\r\nconst ContextProvider = (props)=>{\r\n    const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\r\n    const addItemsHandler = (item) => {\r\n        dispatchCart({type:\"ADD\",item:item});\r\n    };\r\n    const removeItemsHandler = (id) => {\r\n        dispatchCart({ type: \"REMOVE\", id: id });\r\n    };\r\n    const context = {\r\n      items: cartState.items,\r\n      amount: cartState.a,\r\n      addItems: addItemsHandler,\r\n      removeItems: removeItemsHandler,\r\n    };\r\n    \r\n    return <Context.Provider value={context}>\r\n        {props.children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport default ContextProvider;"]},"metadata":{},"sourceType":"module"}